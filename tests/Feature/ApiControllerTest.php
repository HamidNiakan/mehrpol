<?php

namespace Tests\Feature;

use App\Enums\User\DeviceTypeEnums;
use App\Http\Resources\v1\UserResource;
use App\Models\User;
use App\Models\UserSubscription;
use Illuminate\Foundation\Testing\DatabaseMigrations;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Http\Request;
use Illuminate\Testing\Fluent\AssertableJson;
use Tests\Feature\Concerns\TestingSubscription;
use Tests\Feature\Concerns\TestingUser;
use Tests\TestCase;

class ApiControllerTest extends TestCase
{
	use RefreshDatabase;
	use TestingSubscription;
	use TestingUser;

	protected function setUp (): void {
		parent::setUp(); // TODO: Change the autogenerated stub
		$this->withHeaders([
							   'Accept' => 'application/json'
						   ]);
                           $this->createUserWithSubscription('09178223037','12345678',DeviceTypeEnums::Android->value,30);
                           $this->createUserWithSubscription('09178223038','12345679',DeviceTypeEnums::IOS->value,60);
	}
    /**
     * A basic feature test example.
     */
    public function test_example(): void
    {

		$users = User::query()->with([
													 'subscriptions',
													 'subscriptions.subscription',
												 ])
										  ->get();
		$resource = UserResource::collection($users);
		$response = $this->json('GET',route('api.get-users-subscriptions'));
		$this->assertEquals(json_decode($resource->response()->getContent(), true), $response->json());
    }
}
